{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(http, fb) {\n      this.http = http;\n      this.fb = fb;\n      this.title = 'angular-webauthn';\n      this.group = this.fb.group({\n        name: new FormControl(''),\n        username: new FormControl('')\n      });\n    }\n\n    ngOnInit() {}\n\n    login() {\n      let data = {\n        username: this.group.controls['username'].value\n      };\n      this.http.post('/login', data).subscribe(res => console.log(res));\n    }\n\n    register() {\n      let data = {\n        name: this.group.controls['name'].value,\n        username: this.group.controls['username'].value\n      };\n      this.http.post('/register', data).subscribe(res => {\n        if (res) {\n          res = this.convertMakCredResponse(res);\n          console.log(res);\n          navigator.credentials.create({\n            publicKey: res\n          }).then(newcreds => {\n            let assertionRes = this.publicKeyCredentialToJSON(newcreds);\n            return this.getPublicKey(assertionRes);\n          });\n        }\n      });\n    }\n\n    getPublicKey(response) {\n      this.http.post('/getPublicKey', response).subscribe(res => {\n        console.log(res);\n      });\n    }\n\n    convertMakCredResponse(res) {\n      let response = {\n        challenge: this._base64ToArrayBuffer(res.challenge),\n        user: {\n          id: this._base64ToArrayBuffer(res.user.id),\n          displayName: res.user.displayName,\n          name: res.user.name\n        },\n        pubKeyCredParams: res.pubKeyCredParams,\n        rp: {\n          id: res.rpId,\n          name: \"test\"\n        },\n        timeout: res.timeout,\n        authenticatorSelection: {\n          userVerification: res.userVerification,\n          authenticatorAttachment: res.authenticatorAttachment\n        }\n      };\n      return response;\n    }\n\n    _base64ToArrayBuffer(base64) {\n      var binary_string = window.atob(base64);\n      var len = binary_string.length;\n      var bytes = new Uint8Array(len);\n\n      for (var i = 0; i < len; i++) {\n        bytes[i] = binary_string.charCodeAt(i);\n      }\n\n      return bytes.buffer;\n    }\n\n    publicKeyCredentialToJSON(pubKeyCred) {\n      if (pubKeyCred) {\n        if (pubKeyCred.rawId instanceof ArrayBuffer) {\n          const array = new Uint8Array(pubKeyCred.rawId);\n          const STRING_CHAR = array.reduce((data, byte) => {\n            return data + String.fromCharCode(byte);\n          }, '');\n          console.log(STRING_CHAR);\n          let base64String = window.btoa(STRING_CHAR);\n          console.log(base64String);\n          pubKeyCred.rawId = Buffer.from(pubKeyCred.rawId, 'base64');\n        }\n\n        if (pubKeyCred.response) {\n          if (pubKeyCred.response.attestationObject instanceof ArrayBuffer) {\n            pubKeyCred.response.attestationObject = Buffer.from(pubKeyCred.response.attestationObject, 'base64');\n          }\n\n          if (pubKeyCred.response.clientDataJSON instanceof ArrayBuffer) {\n            pubKeyCred.response.clientDataJSON = Buffer.from(pubKeyCred.response.clientDataJSON, 'base64');\n          }\n        }\n      }\n\n      return pubKeyCred;\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 38,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"row\", \"row-center\"], [\"id\", \"registerContainer\", 1, \"column\"], [1, \"formcontainer\", \"register\"], [\"id\", \"register\", 3, \"formGroup\"], [\"for\", \"name\"], [\"type\", \"text\", \"name\", \"name\", \"formControlName\", \"name\"], [\"for\", \"username\"], [\"type\", \"text\", \"name\", \"username\", \"formControlName\", \"username\"], [\"type\", \"submit\", \"value\", \"Register\", 1, \"button-primary\", 3, \"click\"], [\"href\", \"#\", \"id\", \"toLogin\"], [\"id\", \"loginContainer\", 1, \"column\"], [1, \"formcontainer\", \"login\"], [\"id\", \"login\", 3, \"formGroup\"], [\"type\", \"submit\", \"value\", \"Login\", 1, \"button-primary\", 3, \"click\"], [\"href\", \"#\", \"id\", \"toRegistration\"], [\"id\", \"mainContainer\", 1, \"column\"], [1, \"secretcontainer\"], [\"id\", \"name\"], [\"id\", \"theSecret\"], [\"id\", \"logoutButton\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h3\");\n        i0.ɵɵtext(5, \"Register page\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"form\", 4)(7, \"fieldset\")(8, \"label\", 5);\n        i0.ɵɵtext(9, \"name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 6);\n        i0.ɵɵelementStart(11, \"label\", 7);\n        i0.ɵɵtext(12, \"username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 8);\n        i0.ɵɵelementStart(14, \"input\", 9);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_input_click_14_listener() {\n          return ctx.register();\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"a\", 10);\n        i0.ɵɵtext(16, \"Already registered? Login page\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(17, \"div\", 11)(18, \"div\", 12)(19, \"h3\");\n        i0.ɵɵtext(20, \"Login page\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"form\", 13)(22, \"fieldset\")(23, \"label\", 7);\n        i0.ɵɵtext(24, \"username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 8);\n        i0.ɵɵelementStart(26, \"input\", 14);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_input_click_26_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(27, \"a\", 15);\n        i0.ɵɵtext(28, \"Not registered yet? Registration\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(29, \"div\", 16)(30, \"div\", 17)(31, \"h3\");\n        i0.ɵɵtext(32, \"Hey \");\n        i0.ɵɵelement(33, \"span\", 18);\n        i0.ɵɵtext(34, \"!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"div\", 19);\n        i0.ɵɵelementStart(36, \"button\", 20);\n        i0.ɵɵtext(37, \"Logout\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.group);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"formGroup\", ctx.group);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}